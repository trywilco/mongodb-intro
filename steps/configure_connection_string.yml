id: configure_connection_string
learningObjectives:
  - Configure the connection string for the MongoDB Atlas cluster
hints:
  - A connection string should include the username and password you chose when creating the cluster, and the cluster name.
  - "The connection string should look like this: `mongodb+srv://<username>:<password>@<cluster-url>/test?retryWrites=true&w=majority`"

startFlow:
  do:
    - actionId: bot_message
      params:
        person: lucca
        messages:
          - text: If you're all set, the spotlight's on you.
          - text: You’ve set the stage with your first MongoDB Atlas cluster.
          - text: Now, let's orchestrate the next pivotal scene in our film.
          - text: To do this, we'll need the one and only `connection string` that provides the needed access to our entire multiverse.
          - text: To win the Connection String, make your way to the film vault, labeled as `Security > Quicktart`.
          - text: You'll assign a unique username and a secret code – think of it as casting your lead roles. Remember to save these credentials for later.
          - text: To ensure your storyline is accessible to your exclusive audience, you need to manage access carefully.
          - text: Add the IP `34.192.0.0/16` on the `IP Access List`, right under the section named `My Local Environment`. It’s like setting up the best camera angles to capture every moment. Adding this IP mask will let us access the DB from other machines (like your user, or the production computer).
          - text: Now, for the chase!
          - text: Head over to `Deployment > Database`.
          - text: Spot our film cluster, and click on the `Connect` button.
          - text: Following this, you'll find `MongoDB for VS Code`.
          - text: ":instruction[Copy the `connection string` and paste it here.] Make sure that you update the connection string with the username and password you created earlier."
          - components:
            - type: form
              form:
                id: mongo_api_key
                type: secret_input_form

          
trigger:
  type: secret_submitted
  flowNode:
    if:
      conditions:
      - conditionId: database_check_connection_url
        params:
          type: mongodb
          url: "${user.integrations.mongodb.connectionString}"

      then:
        do:
        - actionId: user_set_integration_property
          params:
            integration: mongo
            key: connectionString
            value: ${userMessageText}

        - actionId: bot_message
          params:
            person: lucca
            messages:
            - text: "That connection string looks good! we are ready to move on to the next step."
              delay: 1300
        - actionId: finish_step
      else:
        do:
        - actionId: bot_message
          params:
            person: lucca
            messages:
            - text: "That's not correct, try again!"
              delay: 500
