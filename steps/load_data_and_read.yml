id: load_data_and_read
learningObjectives:
  - Load and read data
hints:
  - Don't get lost in the plot! Check under the film title, [title], and look for our gem, [The Shawshank Redemption].`
  - "The structure of a mongo query is: `{field: value}`"
  - "You can run a query using the UI. Head over to the relevant collection and type the query in the input box"

startFlow:
  do:
    - actionId: bot_message
      params:
        person: lucca
        messages:
          - text: Ah, an epic string!
          - text: But hold your applause.
          - text: Our next act calls for enriching our database.
          - text: Head over to `Deployment>Database` and search for `Load Sample Data`.
          - text: This might take a few beats.
          - text: Once the reels are rolling, let's inspect the master cut.
          - text: Head to `Browse Collections` and look for the movie library `anythink`, presenting a plethora of tales.
          - text: Dive into the `Movies` section.
          - text: Youâ€™re ready to run your first query!
          - text: "First, choose your method: our UI, the Mongo shell, or an alternate MongoDB client."
          - text: "If you want to stay in the Atlas UI, go to `Deployment > Database > Browse Collections`"
          - text: "The challenge? Discover the release year of the classic movie: `The Shawshank Redemption`."
          - text: Query the database.
          - text: ":instruction[Then come back here and enter the year.]"

    - actionId: mongo_delete_many
      params:
        databaseName: anythink
        collectionName: movies
        uri: "${user.integrations.mongo.connectionString}"


    - actionId: mongo_insert_many
      params:
        databaseName: anythink
        collectionName: movies
        uri: "${user.integrations.mongo.connectionString}"
        resourcePath: "assets/movies.json"


trigger:
  type: user_message
  params:
    person: lucca
  flowNode:
    if:
      conditions:
      - conditionId: text_contains_strings
        params:
          text: "${userMessageText}"
          strings:
          - "94"

      then:
        do:
        - actionId: bot_message
          params:
            person: lucca
            messages:
            - text: "Bravo! A year when the silver screen shone bright with 'The Shawshank Redemption'."

        - actionId: finish_step
      else:
        do:
        - actionId: bot_message
          params:
            person: lucca
            messages:
            - text: "Cut! That's not in the script. Another take?"


solution:
  do:
    - actionId: bot_message
      params:
        person: lucca
        messages:
          - text: "We can start with searching for the specific document. Using the UI, look for the relevant collection under the `Deployment -> Database` section."
          - text: "Once you've found the collection, you can search for the movie by typing the title in the search box. The title field is called `title`."
          - text: "The structure of a mongo query is: `{field: value}`. In our case, `{title: \"The Shawshank Redemption\"}`"
          
